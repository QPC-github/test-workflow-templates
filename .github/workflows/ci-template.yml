name: CI Template
on: workflow_call

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: "setup.py"
      - run: pip install tox
      - run: tox -e build
      - uses: actions/upload-artifact@v3
        with:
          name: packages
          path: dist/*
          retention-days: 1

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: "setup.py"
      - uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist/
      - run: pip install tox
      - run: tox -e lint

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.9"
            tox-env: "py39"
          - python-version: "pypy-3.9"
            tox-env: "pypy39"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "setup.py"
      - uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist/
      - run: pip install tox
      - run: tox -e ${{ matrix.tox-env }}
      - uses: codecov/codecov-action@v2
        with:
          env_vars: PYTHON
          files: coverage.xml
          flags: unittests
          verbose: true
      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage.xml

  publish:
    needs: [lint, test]
    if: ${{ github.ref_name == 'main' || github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist/
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ runner.os }}-python-3.9-twine-4.0.0
          restore-keys: |
            pip-cache-${{ runner.os }}-python-3.9-twine-
            pip-cache-${{ runner.os }}-python-
      - run: pip install "twine==4.0.0"
      - env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: echo twine upload dist/*
